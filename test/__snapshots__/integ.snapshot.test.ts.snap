// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default validation 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Campaign19ECB62AF": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "vin100Attachment69984A52",
        "vin100PolicyABC41F0A",
        "vin1001B581DB8",
        "vin100ThingAttachment43EBFB2B",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackCampaign1HandlerProviderframeworkonEventF2C4C246",
            "Arn",
          ],
        },
        "auto_approve": true,
        "campaign_name": "FwTimeBasedCampaign1",
        "collection_scheme": "{\\"timeBasedCollectionScheme\\":{\\"periodMs\\":10000}}",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "signals_to_collect": "[{\\"signalName\\":\\"Vehicle.EngineTorque\\"}]",
        "target_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":vehicle/vin100",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Database": Object {
      "Properties": Object {
        "DatabaseName": "FleetWise",
      },
      "Type": "AWS::Timestream::Database",
    },
    "Fleet150EF280A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogCatalogResourceFC71CDF4",
        "SignalCatalogServiceResourceD3614339",
        "vin100Attachment69984A52",
        "vin100PolicyABC41F0A",
        "vin1001B581DB8",
        "vin100ThingAttachment43EBFB2B",
        "vin200AttachmentD0E37BC9",
        "vin200PolicyF1A8989E",
        "vin200112EC84E",
        "vin200ThingAttachmentB8AF0D1E",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackFleet1HandlerProviderframeworkonEvent01BAB6EC",
            "Arn",
          ],
        },
        "description": " ",
        "fleet_id": "fleet1",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "vehicle_ids": Array [
          "vin100",
          "vin200",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Fleet277887135": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogCatalogResourceFC71CDF4",
        "SignalCatalogServiceResourceD3614339",
        "vin100Attachment69984A52",
        "vin100PolicyABC41F0A",
        "vin1001B581DB8",
        "vin100ThingAttachment43EBFB2B",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackFleet2HandlerProviderframeworkonEvent4D4708C2",
            "Arn",
          ],
        },
        "description": " ",
        "fleet_id": "fleet2",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "vehicle_ids": Array [
          "vin100",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "e5032a7ed03a7762b99560439c17f58d046a35d40ebf64ba70c63157df388563.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ModelA133A72B5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogCatalogResourceFC71CDF4",
        "SignalCatalogServiceResourceD3614339",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackModelAHandlerProviderframeworkonEvent44379B23",
            "Arn",
          ],
        },
        "description": "Model A vehicle",
        "model_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":model-manifest/modelA",
            ],
          ],
        },
        "name": "modelA",
        "network_file_definitions": "{}",
        "network_interfaces": "[{\\"type\\":\\"CAN_INTERFACE\\",\\"interfaceId\\":\\"1\\",\\"canInterface\\":{\\"canInterfaceName\\":\\"vcan0\\",\\"protocolName\\":\\"CAN\\",\\"protocolVersion\\":\\"2.0b\\"}}]",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "signals": "[{\\"type\\":\\"CAN_SIGNAL\\",\\"fullyQualifiedName\\":\\"Vehicle.EngineTorque\\",\\"interfaceId\\":\\"1\\",\\"canSignal\\":{\\"canSignalName\\":\\"EngineTorque\\",\\"factor\\":1,\\"isBigEndian\\":true,\\"isSigned\\":false,\\"length\\":8,\\"messageId\\":401,\\"offset\\":0,\\"startBit\\":9}}]",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Role1ABCC5F0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iotfleetwise.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SignalCatalogCatalogResourceFC71CDF4": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogServiceResourceD3614339",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEvent5D9FFAB4",
            "Arn",
          ],
        },
        "description": "my signal catalog",
        "name": "default",
        "nodes": "[{\\"type\\":\\"Branch\\",\\"branch\\":{\\"name\\":\\"Vehicle\\",\\"fullyQualifiedName\\":\\"Vehicle\\"}},{\\"type\\":\\"Sensor\\",\\"sensor\\":{\\"name\\":\\"EngineTorque\\",\\"fullyQualifiedName\\":\\"Vehicle.EngineTorque\\",\\"dataType\\":\\"DOUBLE\\"}}]",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SignalCatalogServiceResourceD3614339": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogHandlerProviderframeworkonEvent7EF2E62E",
            "Arn",
          ],
        },
        "database_name": "FleetWise",
        "role_arn": Object {
          "Fn::GetAtt": Array [
            "Role1ABCC5F0",
            "Arn",
          ],
        },
        "table_name": "FleetWise",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SingletonLambdaTokenAWSStackName9campaignhandleronevent03097FCA": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "campaignhandler.on_event",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9campaignhandleroneventLogRetentionCEC3D6FA": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9campaignhandleronevent03097FCA",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "fleethandler.on_event",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9fleethandleroneventLogRetention36B7A35A": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "servicehandler.is_complete",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9servicehandleriscompleteLogRetention846C6B5C": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "servicehandler.on_event",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9servicehandleroneventLogRetention47B23400": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaTokenAWSStackName9signalcataloghandleroneventD0421223": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "signalcataloghandler.on_event",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9signalcataloghandleroneventLogRetentionF3A550DC": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9signalcataloghandleroneventD0421223",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "vehiclehandler.on_event",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9vehiclehandleroneventLogRetention26905EB2": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaTokenAWSStackName9vehiclemodelhandleronevent9CB33C16": Object {
      "DependsOn": Array [
        "integstackhandlerroleRoleC931488D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "06ad09065ace12ae7d48ba9ce1416945864ed1ead2fd7b4391c84c0649a95f6e.zip",
        },
        "Handler": "vehiclemodelhandler.on_event",
        "Layers": Array [
          Object {
            "Ref": "integstackiotfleetwiselayerversionBoto3C676EE56",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackhandlerroleRoleC931488D",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaTokenAWSStackName9vehiclemodelhandleroneventLogRetentionD6F1356E": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaTokenAWSStackName9vehiclemodelhandleronevent9CB33C16",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "Table": Object {
      "DependsOn": Array [
        "Database",
      ],
      "Properties": Object {
        "DatabaseName": "FleetWise",
        "TableName": "FleetWise",
      },
      "Type": "AWS::Timestream::Table",
    },
    "integstackCampaign1HandlerProviderframeworkonEventF2C4C246": Object {
      "DependsOn": Array [
        "integstackCampaign1HandlerProviderframeworkonEventServiceRoleDefaultPolicy8DAF4960",
        "integstackCampaign1HandlerProviderframeworkonEventServiceRole3A74D78A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--Campaign1--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9campaignhandleronevent03097FCA",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackCampaign1HandlerProviderframeworkonEventServiceRole3A74D78A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackCampaign1HandlerProviderframeworkonEventLogRetention46BFC2D1": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackCampaign1HandlerProviderframeworkonEventF2C4C246",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackCampaign1HandlerProviderframeworkonEventServiceRole3A74D78A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackCampaign1HandlerProviderframeworkonEventServiceRoleDefaultPolicy8DAF4960": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9campaignhandleronevent03097FCA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9campaignhandleronevent03097FCA",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackCampaign1HandlerProviderframeworkonEventServiceRoleDefaultPolicy8DAF4960",
        "Roles": Array [
          Object {
            "Ref": "integstackCampaign1HandlerProviderframeworkonEventServiceRole3A74D78A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackFleet1HandlerProviderframeworkonEvent01BAB6EC": Object {
      "DependsOn": Array [
        "integstackFleet1HandlerProviderframeworkonEventServiceRoleDefaultPolicy32A16832",
        "integstackFleet1HandlerProviderframeworkonEventServiceRole45D7C9BE",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--Fleet1--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackFleet1HandlerProviderframeworkonEventServiceRole45D7C9BE",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackFleet1HandlerProviderframeworkonEventLogRetentionBD257260": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackFleet1HandlerProviderframeworkonEvent01BAB6EC",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackFleet1HandlerProviderframeworkonEventServiceRole45D7C9BE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackFleet1HandlerProviderframeworkonEventServiceRoleDefaultPolicy32A16832": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackFleet1HandlerProviderframeworkonEventServiceRoleDefaultPolicy32A16832",
        "Roles": Array [
          Object {
            "Ref": "integstackFleet1HandlerProviderframeworkonEventServiceRole45D7C9BE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackFleet2HandlerProviderframeworkonEvent4D4708C2": Object {
      "DependsOn": Array [
        "integstackFleet2HandlerProviderframeworkonEventServiceRoleDefaultPolicy63EEA440",
        "integstackFleet2HandlerProviderframeworkonEventServiceRole147AA93C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--Fleet2--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackFleet2HandlerProviderframeworkonEventServiceRole147AA93C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackFleet2HandlerProviderframeworkonEventLogRetentionCFDCCC7D": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackFleet2HandlerProviderframeworkonEvent4D4708C2",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackFleet2HandlerProviderframeworkonEventServiceRole147AA93C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackFleet2HandlerProviderframeworkonEventServiceRoleDefaultPolicy63EEA440": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9fleethandleronevent689585DE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackFleet2HandlerProviderframeworkonEventServiceRoleDefaultPolicy63EEA440",
        "Roles": Array [
          Object {
            "Ref": "integstackFleet2HandlerProviderframeworkonEventServiceRole147AA93C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackModelAHandlerProviderframeworkonEvent44379B23": Object {
      "DependsOn": Array [
        "integstackModelAHandlerProviderframeworkonEventServiceRoleDefaultPolicy23EA8997",
        "integstackModelAHandlerProviderframeworkonEventServiceRoleD6B4E278",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--ModelA--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9vehiclemodelhandleronevent9CB33C16",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackModelAHandlerProviderframeworkonEventServiceRoleD6B4E278",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackModelAHandlerProviderframeworkonEventLogRetentionE408C0A7": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackModelAHandlerProviderframeworkonEvent44379B23",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackModelAHandlerProviderframeworkonEventServiceRoleD6B4E278": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackModelAHandlerProviderframeworkonEventServiceRoleDefaultPolicy23EA8997": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9vehiclemodelhandleronevent9CB33C16",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9vehiclemodelhandleronevent9CB33C16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackModelAHandlerProviderframeworkonEventServiceRoleDefaultPolicy23EA8997",
        "Roles": Array [
          Object {
            "Ref": "integstackModelAHandlerProviderframeworkonEventServiceRoleD6B4E278",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackSignalCatalogHandlerProviderframeworkisCompleteCE714C8C": Object {
      "DependsOn": Array [
        "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRoleDefaultPolicyDDD9554E",
        "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRole8BDC385A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (integ-stack/integ-stack--SignalCatalog--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRole8BDC385A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackSignalCatalogHandlerProviderframeworkisCompleteLogRetentionECDD2ABB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackSignalCatalogHandlerProviderframeworkisCompleteCE714C8C",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRole8BDC385A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRoleDefaultPolicyDDD9554E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRoleDefaultPolicyDDD9554E",
        "Roles": Array [
          Object {
            "Ref": "integstackSignalCatalogHandlerProviderframeworkisCompleteServiceRole8BDC385A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackSignalCatalogHandlerProviderframeworkonEvent7EF2E62E": Object {
      "DependsOn": Array [
        "integstackSignalCatalogHandlerProviderframeworkonEventServiceRoleDefaultPolicy27FAAC94",
        "integstackSignalCatalogHandlerProviderframeworkonEventServiceRole6BFABFD6",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--SignalCatalog--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": Object {
              "Ref": "integstackSignalCatalogHandlerProviderwaiterstatemachine0556D4A2",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogHandlerProviderframeworkonEventServiceRole6BFABFD6",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackSignalCatalogHandlerProviderframeworkonEventLogRetention22F90008": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackSignalCatalogHandlerProviderframeworkonEvent7EF2E62E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackSignalCatalogHandlerProviderframeworkonEventServiceRole6BFABFD6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackSignalCatalogHandlerProviderframeworkonEventServiceRoleDefaultPolicy27FAAC94": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "integstackSignalCatalogHandlerProviderwaiterstatemachine0556D4A2",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackSignalCatalogHandlerProviderframeworkonEventServiceRoleDefaultPolicy27FAAC94",
        "Roles": Array [
          Object {
            "Ref": "integstackSignalCatalogHandlerProviderframeworkonEventServiceRole6BFABFD6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackSignalCatalogHandlerProviderframeworkonTimeout8EF9AEE3": Object {
      "DependsOn": Array [
        "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleDefaultPolicyB582F988",
        "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleB74424EF",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (integ-stack/integ-stack--SignalCatalog--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleB74424EF",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackSignalCatalogHandlerProviderframeworkonTimeoutLogRetention1B776F62": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackSignalCatalogHandlerProviderframeworkonTimeout8EF9AEE3",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleB74424EF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleDefaultPolicyB582F988": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9servicehandleronevent1D679A4A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9servicehandleriscompleteCED82742",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleDefaultPolicyB582F988",
        "Roles": Array [
          Object {
            "Ref": "integstackSignalCatalogHandlerProviderframeworkonTimeoutServiceRoleB74424EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackSignalCatalogHandlerProviderwaiterstatemachine0556D4A2": Object {
      "DependsOn": Array [
        "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleDefaultPolicy9C3D3032",
        "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleA18AEC37",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":5,\\"MaxAttempts\\":360,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "integstackSignalCatalogHandlerProviderframeworkisCompleteCE714C8C",
                  "Arn",
                ],
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "integstackSignalCatalogHandlerProviderframeworkonTimeout8EF9AEE3",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleA18AEC37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleA18AEC37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.eu-central-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleDefaultPolicy9C3D3032": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "integstackSignalCatalogHandlerProviderframeworkisCompleteCE714C8C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "integstackSignalCatalogHandlerProviderframeworkisCompleteCE714C8C",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "integstackSignalCatalogHandlerProviderframeworkonTimeout8EF9AEE3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "integstackSignalCatalogHandlerProviderframeworkonTimeout8EF9AEE3",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleDefaultPolicy9C3D3032",
        "Roles": Array [
          Object {
            "Ref": "integstackSignalCatalogHandlerProviderwaiterstatemachineRoleA18AEC37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEvent5D9FFAB4": Object {
      "DependsOn": Array [
        "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRoleDefaultPolicy7EEE7A33",
        "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRole594FAC07",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--SignalCatalog--ServiceCatalogHandler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9signalcataloghandleroneventD0421223",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRole594FAC07",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventLogRetention6D55ABEB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEvent5D9FFAB4",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRole594FAC07": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRoleDefaultPolicy7EEE7A33": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9signalcataloghandleroneventD0421223",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9signalcataloghandleroneventD0421223",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRoleDefaultPolicy7EEE7A33",
        "Roles": Array [
          Object {
            "Ref": "integstackSignalCatalogServiceCatalogHandlerProviderframeworkonEventServiceRole594FAC07",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackhandlerroleRoleC931488D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackiotfleetwiselayerversionBoto3C676EE56": Object {
      "Properties": Object {
        "CompatibleRuntimes": Array [
          "python3.9",
        ],
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "58e666607b1a1f413f63b013633558c0a9186542993036d3bf2f34e93e9a7fbf.zip",
        },
        "Description": "Boto3 Library with Iot Fleetwise Support",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "integstackvin100HandlerProviderframeworkonEvent82C29964": Object {
      "DependsOn": Array [
        "integstackvin100HandlerProviderframeworkonEventServiceRoleDefaultPolicyB6B2057E",
        "integstackvin100HandlerProviderframeworkonEventServiceRoleE1D99A4B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--vin100--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackvin100HandlerProviderframeworkonEventServiceRoleE1D99A4B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackvin100HandlerProviderframeworkonEventLogRetentionBF732EF8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackvin100HandlerProviderframeworkonEvent82C29964",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackvin100HandlerProviderframeworkonEventServiceRoleDefaultPolicyB6B2057E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackvin100HandlerProviderframeworkonEventServiceRoleDefaultPolicyB6B2057E",
        "Roles": Array [
          Object {
            "Ref": "integstackvin100HandlerProviderframeworkonEventServiceRoleE1D99A4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integstackvin100HandlerProviderframeworkonEventServiceRoleE1D99A4B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackvin200HandlerProviderframeworkonEventB14DE12D": Object {
      "DependsOn": Array [
        "integstackvin200HandlerProviderframeworkonEventServiceRoleDefaultPolicy1E239E9C",
        "integstackvin200HandlerProviderframeworkonEventServiceRole02B70F01",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-central-1",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/integ-stack--vin200--Handler/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "integstackvin200HandlerProviderframeworkonEventServiceRole02B70F01",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "integstackvin200HandlerProviderframeworkonEventLogRetentionE47DDB66": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "integstackvin200HandlerProviderframeworkonEventB14DE12D",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "integstackvin200HandlerProviderframeworkonEventServiceRole02B70F01": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "integstackvin200HandlerProviderframeworkonEventServiceRoleDefaultPolicy1E239E9C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaTokenAWSStackName9vehiclehandleroneventB293CFBF",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integstackvin200HandlerProviderframeworkonEventServiceRoleDefaultPolicy1E239E9C",
        "Roles": Array [
          Object {
            "Ref": "integstackvin200HandlerProviderframeworkonEventServiceRole02B70F01",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vin1001B581DB8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ModelA133A72B5",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackvin100HandlerProviderframeworkonEvent82C29964",
            "Arn",
          ],
        },
        "create_iot_thing": true,
        "decoder_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":decoder-manifest/modelA",
            ],
          ],
        },
        "model_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":model-manifest/modelA",
            ],
          ],
        },
        "vehicle_id": "vin100",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "vin100Attachment69984A52": Object {
      "DependsOn": Array [
        "vin100PolicyABC41F0A",
      ],
      "Properties": Object {
        "PolicyName": "vin100-policy",
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin1001B581DB8",
            "certificateArn",
          ],
        },
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
    },
    "vin100PolicyABC41F0A": Object {
      "DependsOn": Array [
        "vin1001B581DB8",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{
          \\"Version\\": \\"2012-10-17\\",
          \\"Statement\\": [{
                  \\"Effect\\": \\"Allow\\",
                  \\"Action\\": [
                      \\"iot:Connect\\",
                      \\"iot:Subscribe\\",
                      \\"iot:Publish\\",
                      \\"iot:Receive\\"
                  ],
                  \\"Resource\\": [
                      \\"arn:aws:iot:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":client/vin100*\\",
                      \\"arn:aws:iot:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":topic/*\\",
                      \\"arn:aws:iot:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":topicfilter/*\\"
                  ]
          }]
        }",
            ],
          ],
        },
        "PolicyName": "vin100-policy",
      },
      "Type": "AWS::IoT::Policy",
    },
    "vin100ThingAttachment43EBFB2B": Object {
      "DependsOn": Array [
        "vin100Attachment69984A52",
      ],
      "Properties": Object {
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin1001B581DB8",
            "certificateArn",
          ],
        },
        "ThingName": "vin100",
      },
      "Type": "AWS::IoT::ThingPrincipalAttachment",
    },
    "vin200112EC84E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ModelA133A72B5",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "integstackvin200HandlerProviderframeworkonEventB14DE12D",
            "Arn",
          ],
        },
        "create_iot_thing": true,
        "decoder_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":decoder-manifest/modelA",
            ],
          ],
        },
        "model_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":model-manifest/modelA",
            ],
          ],
        },
        "vehicle_id": "vin200",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "vin200AttachmentD0E37BC9": Object {
      "DependsOn": Array [
        "vin200PolicyF1A8989E",
      ],
      "Properties": Object {
        "PolicyName": "vin200-policy",
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin200112EC84E",
            "certificateArn",
          ],
        },
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
    },
    "vin200PolicyF1A8989E": Object {
      "DependsOn": Array [
        "vin200112EC84E",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{
          \\"Version\\": \\"2012-10-17\\",
          \\"Statement\\": [{
                  \\"Effect\\": \\"Allow\\",
                  \\"Action\\": [
                      \\"iot:Connect\\",
                      \\"iot:Subscribe\\",
                      \\"iot:Publish\\",
                      \\"iot:Receive\\"
                  ],
                  \\"Resource\\": [
                      \\"arn:aws:iot:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":client/vin200*\\",
                      \\"arn:aws:iot:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":topic/*\\",
                      \\"arn:aws:iot:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":topicfilter/*\\"
                  ]
          }]
        }",
            ],
          ],
        },
        "PolicyName": "vin200-policy",
      },
      "Type": "AWS::IoT::Policy",
    },
    "vin200ThingAttachmentB8AF0D1E": Object {
      "DependsOn": Array [
        "vin200AttachmentD0E37BC9",
      ],
      "Properties": Object {
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin200112EC84E",
            "certificateArn",
          ],
        },
        "ThingName": "vin200",
      },
      "Type": "AWS::IoT::ThingPrincipalAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

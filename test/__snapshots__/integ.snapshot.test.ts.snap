// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default validation 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Campaign19ECB62AF": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "vin100Attachment69984A52",
        "vin100PolicyABC41F0A",
        "vin1001B581DB8",
        "vin100ThingAttachment43EBFB2B",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "campaignhandleroneventproviderProviderframeworkonEventF0F8C6CC",
            "Arn",
          ],
        },
        "auto_approve": true,
        "collection_scheme": "{\\"timeBasedCollectionScheme\\":{\\"periodMs\\":10000}}",
        "data_destination_configs": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"timestreamConfig\\":{\\"executionRoleArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TimestreamExecutionRole47469287",
                  "Arn",
                ],
              },
              "\\",\\"timestreamTableArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "Table",
                  "Arn",
                ],
              },
              "\\"}}]",
            ],
          ],
        },
        "name": "FwTimeBasedCampaign1",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "signals_to_collect": "[{\\"name\\":\\"Vehicle.EngineTorque\\"}]",
        "target_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":vehicle/vin100",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Database": Object {
      "Properties": Object {
        "DatabaseName": "FleetWise",
      },
      "Type": "AWS::Timestream::Database",
    },
    "Fleet150EF280A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogCatalogResourceFC71CDF4",
        "SignalCatalogServiceResourceD3614339",
        "vin100Attachment69984A52",
        "vin100PolicyABC41F0A",
        "vin1001B581DB8",
        "vin100ThingAttachment43EBFB2B",
        "vin200AttachmentD0E37BC9",
        "vin200PolicyF1A8989E",
        "vin200112EC84E",
        "vin200ThingAttachmentB8AF0D1E",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "fleethandleroneventproviderProviderframeworkonEvent0353D798",
            "Arn",
          ],
        },
        "description": " ",
        "fleet_id": "fleet1",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "vehicle_names": Array [
          "vin100",
          "vin200",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Fleet277887135": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogCatalogResourceFC71CDF4",
        "SignalCatalogServiceResourceD3614339",
        "vin100Attachment69984A52",
        "vin100PolicyABC41F0A",
        "vin1001B581DB8",
        "vin100ThingAttachment43EBFB2B",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "fleethandleroneventproviderProviderframeworkonEvent0353D798",
            "Arn",
          ],
        },
        "description": " ",
        "fleet_id": "fleet2",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "vehicle_names": Array [
          "vin100",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ModelA133A72B5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogCatalogResourceFC71CDF4",
        "SignalCatalogServiceResourceD3614339",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "vehiclemodelhandleroneventproviderProviderframeworkonEventDE0217FD",
            "Arn",
          ],
        },
        "description": "Model A vehicle",
        "model_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":model-manifest/modelA",
            ],
          ],
        },
        "name": "modelA",
        "network_file_definitions": "{}",
        "network_interfaces": "[{\\"type\\":\\"CAN_INTERFACE\\",\\"interfaceId\\":\\"1\\",\\"canInterface\\":{\\"name\\":\\"vcan0\\",\\"protocolName\\":\\"CAN\\",\\"protocolVersion\\":\\"2.0b\\"}}]",
        "signal_catalog_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":signal-catalog/default",
            ],
          ],
        },
        "signals": "[{\\"type\\":\\"CAN_SIGNAL\\",\\"fullyQualifiedName\\":\\"Vehicle.EngineTorque\\",\\"interfaceId\\":\\"1\\",\\"canSignal\\":{\\"factor\\":1,\\"isBigEndian\\":true,\\"isSigned\\":false,\\"length\\":8,\\"messageId\\":401,\\"offset\\":0,\\"startBit\\":9}}]",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SignalCatalogCatalogResourceFC71CDF4": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SignalCatalogServiceResourceD3614339",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "signalcataloghandleroneventproviderProviderframeworkonEvent446D3361",
            "Arn",
          ],
        },
        "description": "my signal catalog",
        "name": "default",
        "nodes": "[{\\"branch\\":{\\"fullyQualifiedName\\":\\"Vehicle\\"}},{\\"sensor\\":{\\"fullyQualifiedName\\":\\"Vehicle.EngineTorque\\",\\"dataType\\":\\"DOUBLE\\"}}]",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SignalCatalogServiceResourceD3614339": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "servicehandleroneventproviderProviderframeworkonEventAD64D5B7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SingletonLambdacampaignhandleroneventAAEA2327": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "campaignhandler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdacampaignhandleroneventLogRetention77D4DF51": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdacampaignhandleroneventAAEA2327",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdafleethandleroneventA15D4B5F": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "fleethandler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdafleethandleroneventLogRetention95F9BDDE": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdafleethandleroneventA15D4B5F",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaservicehandleriscomplete2B1E3BBE": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "servicehandler.is_complete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaservicehandleriscompleteLogRetentionD2BD6DF8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaservicehandleriscomplete2B1E3BBE",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdaservicehandleronevent72F0BD1E": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "servicehandler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaservicehandleroneventLogRetention8E5F855A": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdaservicehandleronevent72F0BD1E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdasignalcataloghandleronevent4229F21D": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "signalcataloghandler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdasignalcataloghandleroneventLogRetention77523A47": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdasignalcataloghandleronevent4229F21D",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdavehiclehandleronevent36CA714A": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "vehiclehandler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdavehiclehandleroneventLogRetention238E0DBE": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdavehiclehandleronevent36CA714A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonLambdavehiclemodelhandleronevent7F545ED8": Object {
      "DependsOn": Array [
        "handlerroleRoleDefaultPolicy3C992314",
        "handlerroleRoleEEEB95D2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2a959aaf5a798f08ab70fcdd87c1b928827d3c690f5a36fba79efae0dbfae2f2.zip",
        },
        "Handler": "vehiclemodelhandler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "handlerroleRoleEEEB95D2",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdavehiclemodelhandleroneventLogRetentionD23E26DE": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonLambdavehiclemodelhandleronevent7F545ED8",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "Table": Object {
      "DependsOn": Array [
        "Database",
      ],
      "Properties": Object {
        "DatabaseName": "FleetWise",
        "TableName": "FleetWise",
      },
      "Type": "AWS::Timestream::Table",
    },
    "TimestreamExecutionRole47469287": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iotfleetwise.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "timestream:WriteRecords",
                    "timestream:Select",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "Table",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "timestream:DescribeEndpoints",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "permissionsPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "campaignhandleroneventproviderProviderframeworkonEventF0F8C6CC": Object {
      "DependsOn": Array [
        "campaignhandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyF11C0596",
        "campaignhandleroneventproviderProviderframeworkonEventServiceRole34A9DDEC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/campaignhandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdacampaignhandleroneventAAEA2327",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "campaignhandleroneventproviderProviderframeworkonEventServiceRole34A9DDEC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "campaignhandleroneventproviderProviderframeworkonEventLogRetention9FC6B35D": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "campaignhandleroneventproviderProviderframeworkonEventF0F8C6CC",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "campaignhandleroneventproviderProviderframeworkonEventServiceRole34A9DDEC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "campaignhandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyF11C0596": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdacampaignhandleroneventAAEA2327",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdacampaignhandleroneventAAEA2327",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "campaignhandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyF11C0596",
        "Roles": Array [
          Object {
            "Ref": "campaignhandleroneventproviderProviderframeworkonEventServiceRole34A9DDEC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fleethandleroneventproviderProviderframeworkonEvent0353D798": Object {
      "DependsOn": Array [
        "fleethandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy881D6C68",
        "fleethandleroneventproviderProviderframeworkonEventServiceRoleA1ABA337",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/fleethandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdafleethandleroneventA15D4B5F",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "fleethandleroneventproviderProviderframeworkonEventServiceRoleA1ABA337",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "fleethandleroneventproviderProviderframeworkonEventLogRetention69CF2E61": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "fleethandleroneventproviderProviderframeworkonEvent0353D798",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "fleethandleroneventproviderProviderframeworkonEventServiceRoleA1ABA337": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "fleethandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy881D6C68": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdafleethandleroneventA15D4B5F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdafleethandleroneventA15D4B5F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "fleethandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy881D6C68",
        "Roles": Array [
          Object {
            "Ref": "fleethandleroneventproviderProviderframeworkonEventServiceRoleA1ABA337",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "handlerroleRoleDefaultPolicy3C992314": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iotfleetwise:*",
                "iot:DescribeThing",
                "iot:CreateThing",
                "iot:CreateKeysAndCertificate",
                "iot:DescribeEndpoint",
                "iot:ListThingPrincipals",
                "iot:DeleteCertificate",
                "iot:DeleteThing",
                "timestream:DescribeEndpoints",
                "timestream:DescribeDatabase",
                "timestream:DescribeTable",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "handlerroleRoleDefaultPolicy3C992314",
        "Roles": Array [
          Object {
            "Ref": "handlerroleRoleEEEB95D2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "handlerroleRoleEEEB95D2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicehandleroneventproviderProviderframeworkisCompleteD1F225BF": Object {
      "DependsOn": Array [
        "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleDefaultPolicy240ECF7D",
        "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleE5C2FCA6",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (integ-stack/servicehandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaservicehandleronevent72F0BD1E",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleE5C2FCA6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "servicehandleroneventproviderProviderframeworkisCompleteLogRetentionED1C98D4": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "servicehandleroneventproviderProviderframeworkisCompleteD1F225BF",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleDefaultPolicy240ECF7D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaservicehandleronevent72F0BD1E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaservicehandleronevent72F0BD1E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleDefaultPolicy240ECF7D",
        "Roles": Array [
          Object {
            "Ref": "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleE5C2FCA6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicehandleroneventproviderProviderframeworkisCompleteServiceRoleE5C2FCA6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicehandleroneventproviderProviderframeworkonEventAD64D5B7": Object {
      "DependsOn": Array [
        "servicehandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy6A1ADF4E",
        "servicehandleroneventproviderProviderframeworkonEventServiceRole936A4049",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/servicehandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaservicehandleronevent72F0BD1E",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": Object {
              "Ref": "servicehandleroneventproviderProviderwaiterstatemachine6F821585",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "servicehandleroneventproviderProviderframeworkonEventServiceRole936A4049",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "servicehandleroneventproviderProviderframeworkonEventLogRetentionB3FC9528": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "servicehandleroneventproviderProviderframeworkonEventAD64D5B7",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "servicehandleroneventproviderProviderframeworkonEventServiceRole936A4049": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicehandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy6A1ADF4E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaservicehandleronevent72F0BD1E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaservicehandleronevent72F0BD1E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "servicehandleroneventproviderProviderwaiterstatemachine6F821585",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicehandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy6A1ADF4E",
        "Roles": Array [
          Object {
            "Ref": "servicehandleroneventproviderProviderframeworkonEventServiceRole936A4049",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicehandleroneventproviderProviderframeworkonTimeout39AE4808": Object {
      "DependsOn": Array [
        "servicehandleroneventproviderProviderframeworkonTimeoutServiceRoleDefaultPolicy3AF77CAC",
        "servicehandleroneventproviderProviderframeworkonTimeoutServiceRole0A52CA77",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (integ-stack/servicehandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaservicehandleronevent72F0BD1E",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": Object {
          "Fn::GetAtt": Array [
            "servicehandleroneventproviderProviderframeworkonTimeoutServiceRole0A52CA77",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "servicehandleroneventproviderProviderframeworkonTimeoutLogRetention1B72B9AD": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "servicehandleroneventproviderProviderframeworkonTimeout39AE4808",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "servicehandleroneventproviderProviderframeworkonTimeoutServiceRole0A52CA77": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicehandleroneventproviderProviderframeworkonTimeoutServiceRoleDefaultPolicy3AF77CAC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaservicehandleronevent72F0BD1E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaservicehandleronevent72F0BD1E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdaservicehandleriscomplete2B1E3BBE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicehandleroneventproviderProviderframeworkonTimeoutServiceRoleDefaultPolicy3AF77CAC",
        "Roles": Array [
          Object {
            "Ref": "servicehandleroneventproviderProviderframeworkonTimeoutServiceRole0A52CA77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicehandleroneventproviderProviderwaiterstatemachine6F821585": Object {
      "DependsOn": Array [
        "servicehandleroneventproviderProviderwaiterstatemachineRoleDefaultPolicyCFBCFF16",
        "servicehandleroneventproviderProviderwaiterstatemachineRoleF1BEF8F3",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":5,\\"MaxAttempts\\":360,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "servicehandleroneventproviderProviderframeworkisCompleteD1F225BF",
                  "Arn",
                ],
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "servicehandleroneventproviderProviderframeworkonTimeout39AE4808",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "servicehandleroneventproviderProviderwaiterstatemachineRoleF1BEF8F3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "servicehandleroneventproviderProviderwaiterstatemachineRoleDefaultPolicyCFBCFF16": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "servicehandleroneventproviderProviderframeworkisCompleteD1F225BF",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "servicehandleroneventproviderProviderframeworkisCompleteD1F225BF",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "servicehandleroneventproviderProviderframeworkonTimeout39AE4808",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "servicehandleroneventproviderProviderframeworkonTimeout39AE4808",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicehandleroneventproviderProviderwaiterstatemachineRoleDefaultPolicyCFBCFF16",
        "Roles": Array [
          Object {
            "Ref": "servicehandleroneventproviderProviderwaiterstatemachineRoleF1BEF8F3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicehandleroneventproviderProviderwaiterstatemachineRoleF1BEF8F3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "signalcataloghandleroneventproviderProviderframeworkonEvent446D3361": Object {
      "DependsOn": Array [
        "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy3BD60236",
        "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleFC64809B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/signalcataloghandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdasignalcataloghandleronevent4229F21D",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleFC64809B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "signalcataloghandleroneventproviderProviderframeworkonEventLogRetention090E6375": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "signalcataloghandleroneventproviderProviderframeworkonEvent446D3361",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy3BD60236": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdasignalcataloghandleronevent4229F21D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdasignalcataloghandleronevent4229F21D",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicy3BD60236",
        "Roles": Array [
          Object {
            "Ref": "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleFC64809B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signalcataloghandleroneventproviderProviderframeworkonEventServiceRoleFC64809B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "vehiclehandleroneventproviderProviderframeworkonEvent97DBDC8E": Object {
      "DependsOn": Array [
        "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyCA918FB6",
        "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleFBFDBAE0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/vehiclehandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdavehiclehandleronevent36CA714A",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleFBFDBAE0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "vehiclehandleroneventproviderProviderframeworkonEventLogRetention5C57E90B": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "vehiclehandleroneventproviderProviderframeworkonEvent97DBDC8E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyCA918FB6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdavehiclehandleronevent36CA714A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdavehiclehandleronevent36CA714A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyCA918FB6",
        "Roles": Array [
          Object {
            "Ref": "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleFBFDBAE0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vehiclehandleroneventproviderProviderframeworkonEventServiceRoleFBFDBAE0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "vehiclemodelhandleroneventproviderProviderframeworkonEventDE0217FD": Object {
      "DependsOn": Array [
        "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyA7AB4AF7",
        "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRole2E172F2E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-stack/vehiclemodelhandler.on_event-provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdavehiclemodelhandleronevent7F545ED8",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRole2E172F2E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "vehiclemodelhandleroneventproviderProviderframeworkonEventLogRetention7586A20D": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "vehiclemodelhandleroneventproviderProviderframeworkonEventDE0217FD",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRole2E172F2E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyA7AB4AF7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdavehiclemodelhandleronevent7F545ED8",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdavehiclemodelhandleronevent7F545ED8",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRoleDefaultPolicyA7AB4AF7",
        "Roles": Array [
          Object {
            "Ref": "vehiclemodelhandleroneventproviderProviderframeworkonEventServiceRole2E172F2E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vin1001B581DB8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ModelA133A72B5",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "vehiclehandleroneventproviderProviderframeworkonEvent97DBDC8E",
            "Arn",
          ],
        },
        "create_iot_thing": true,
        "decoder_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":decoder-manifest/modelA",
            ],
          ],
        },
        "model_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":model-manifest/modelA",
            ],
          ],
        },
        "vehicle_name": "vin100",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "vin100Attachment69984A52": Object {
      "DependsOn": Array [
        "vin100PolicyABC41F0A",
      ],
      "Properties": Object {
        "PolicyName": "vin100-policy",
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin1001B581DB8",
            "certificateArn",
          ],
        },
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
    },
    "vin100PolicyABC41F0A": Object {
      "DependsOn": Array [
        "vin1001B581DB8",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:Connect",
                "iot:Subscribe",
                "iot:Publish",
                "iot:Receive",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":client/vin100*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topic/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topicfilter/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vin100-policy",
      },
      "Type": "AWS::IoT::Policy",
    },
    "vin100ThingAttachment43EBFB2B": Object {
      "DependsOn": Array [
        "vin100Attachment69984A52",
      ],
      "Properties": Object {
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin1001B581DB8",
            "certificateArn",
          ],
        },
        "ThingName": "vin100",
      },
      "Type": "AWS::IoT::ThingPrincipalAttachment",
    },
    "vin200112EC84E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ModelA133A72B5",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "vehiclehandleroneventproviderProviderframeworkonEvent97DBDC8E",
            "Arn",
          ],
        },
        "create_iot_thing": true,
        "decoder_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":decoder-manifest/modelA",
            ],
          ],
        },
        "model_manifest_arn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:iotfleetwise:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":model-manifest/modelA",
            ],
          ],
        },
        "vehicle_name": "vin200",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "vin200AttachmentD0E37BC9": Object {
      "DependsOn": Array [
        "vin200PolicyF1A8989E",
      ],
      "Properties": Object {
        "PolicyName": "vin200-policy",
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin200112EC84E",
            "certificateArn",
          ],
        },
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
    },
    "vin200PolicyF1A8989E": Object {
      "DependsOn": Array [
        "vin200112EC84E",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:Connect",
                "iot:Subscribe",
                "iot:Publish",
                "iot:Receive",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":client/vin200*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topic/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topicfilter/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vin200-policy",
      },
      "Type": "AWS::IoT::Policy",
    },
    "vin200ThingAttachmentB8AF0D1E": Object {
      "DependsOn": Array [
        "vin200AttachmentD0E37BC9",
      ],
      "Properties": Object {
        "Principal": Object {
          "Fn::GetAtt": Array [
            "vin200112EC84E",
            "certificateArn",
          ],
        },
        "ThingName": "vin200",
      },
      "Type": "AWS::IoT::ThingPrincipalAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
